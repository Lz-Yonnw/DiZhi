package com.ruoyi.web.controller.system;

import java.util.List;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.ruoyi.common.annotation.Log;
import com.ruoyi.common.core.controller.BaseController;
import com.ruoyi.common.core.domain.AjaxResult;
import com.ruoyi.common.enums.BusinessType;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;
import com.ruoyi.system.domain.TbClassify;
import com.ruoyi.system.service.ITbClassifyService;
import com.ruoyi.common.utils.poi.ExcelUtil;
import com.ruoyi.common.core.page.TableDataInfo;

/**
 * 分类Controller
 *
 * @author zzz
 * @date 2021-08-17
 */
@RestController
@RequestMapping("/system/classify")
@Api(tags = "分类")
public class TbClassifyController extends BaseController
{
    @Autowired
    private ITbClassifyService tbClassifyService;

    /**
     * 查询分类列表
     */
    @ApiOperation("查询分类列表")
    @PreAuthorize("@ss.hasPermi('system:classify:list')")
    @GetMapping("/list")
    public TableDataInfo<List<TbClassify>> list(TbClassify tbClassify)
    {
        startPage();
        List<TbClassify> list = tbClassifyService.selectTbClassifyList(tbClassify);
        return getDataTable(list);
    }

    /**
     * 导出分类列表
     */
    @ApiOperation("导出分类列表")
    @PreAuthorize("@ss.hasPermi('system:classify:export')")
    @Log(title = "分类", businessType = BusinessType.EXPORT)
    @GetMapping("/export")
    public AjaxResult export(TbClassify tbClassify)
    {
        List<TbClassify> list = tbClassifyService.selectTbClassifyList(tbClassify);
        ExcelUtil<TbClassify> util = new ExcelUtil<TbClassify>(TbClassify.class);
        return util.exportExcel(list, "classify");
    }

    /**
     * 获取分类详细信息
     */
    @ApiOperation("获取分类详细信息")
    @PreAuthorize("@ss.hasPermi('system:classify:query')")
    @GetMapping(value = "/{id}")
    public AjaxResult getInfo(@PathVariable("id") Long id)
    {
        return AjaxResult.success(tbClassifyService.selectTbClassifyById(id));
    }

    /**
     * 新增分类
     */
    @ApiOperation("新增分类")
    @PreAuthorize("@ss.hasPermi('system:classify:add')")
    @Log(title = "分类", businessType = BusinessType.INSERT)
    @PostMapping
    public AjaxResult add(@RequestBody TbClassify tbClassify)
    {
        return toAjax(tbClassifyService.insertTbClassify(tbClassify));
    }

    /**
     * 修改分类
     */
    @ApiOperation("修改分类")
    @PreAuthorize("@ss.hasPermi('system:classify:edit')")
    @Log(title = "分类", businessType = BusinessType.UPDATE)
    @PutMapping
    public AjaxResult edit(@RequestBody TbClassify tbClassify)
    {
        return toAjax(tbClassifyService.updateTbClassify(tbClassify));
    }

    /**
     * 删除分类
     */
    @ApiOperation("删除分类")
    @PreAuthorize("@ss.hasPermi('system:classify:remove')")
    @Log(title = "分类", businessType = BusinessType.DELETE)
    @DeleteMapping("/{ids}")
    public AjaxResult remove(@PathVariable Long[] ids)
    {
        return toAjax(tbClassifyService.deleteTbClassifyByIds(ids));
    }
}
