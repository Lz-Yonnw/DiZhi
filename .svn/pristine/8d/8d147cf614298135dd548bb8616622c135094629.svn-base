<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.TbClassifyMapper">
    
    <resultMap type="TbClassify" id="TbClassifyResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="type"    column="type"    />
        <result property="pId"    column="p_id"    />
        <result property="parentId"    column="parent_id"/>
    </resultMap>

    <sql id="selectTbClassifyVo">
        select id, name, type,p_id,parent_id from tb_classify
    </sql>

    <select id="selectTbClassifyList" parameterType="TbClassify" resultMap="TbClassifyResult">
        <include refid="selectTbClassifyVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="type != null "> and type = #{type}</if>
            <if test="1== 1 "> and parent_id = #{parentId}</if>
            <if test="pId != null "> and p_id = #{pId}</if>
        </where>
    </select>

    <select id="selectTbClassifyListByPId" parameterType="TbClassify" resultMap="TbClassifyResult">
       select id, name, type,p_id,parent_id from tb_classify
       where
        p_id in (select id from tb_classify where type =5 and parent_id = #{parentId} and p_id=0)
        <if test="type != null "> and type = #{type}</if>
        <if test="pId != null "> and p_id = #{pId}</if>
    </select>
    
    <select id="selectTbClassifyById" parameterType="Long" resultMap="TbClassifyResult">
        <include refid="selectTbClassifyVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertTbClassify" parameterType="TbClassify" useGeneratedKeys="true" keyProperty="id">
        insert into tb_classify
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="type != null">type,</if>
            <if test="pId != null">p_id,</if>
            <if test="parentId != null">parent_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="type != null">#{type},</if>
            <if test="pId != null">#{pId},</if>
            <if test="parentId != null">#{parentId},</if>
         </trim>
    </insert>

    <update id="updateTbClassify" parameterType="TbClassify">
        update tb_classify
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="type != null">type = #{type},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTbClassifyById" parameterType="Long">
        delete from tb_classify where id = #{id}
    </delete>

    <delete id="deleteTbClassifyByIds" parameterType="String">
        delete from tb_classify where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>